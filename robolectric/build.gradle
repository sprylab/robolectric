new RoboJavaModulePlugin(
        deploy: true
).apply(project)

processResources {
    filesMatching("**/robolectric-version.properties") {
        filter { String line ->
            return line.replaceAll(/\$\{project.version\}/, project.version)
        }
    }
}

configurations {
    shadow
}

project.sourceSets.test.compileClasspath += configurations.shadow

dependencies {
    // Project dependencies
    compile project(":robolectric-annotations")
    compile project(":robolectric-resources")
    compile project(":robolectric-utils")

    // We need to have shadows-core.jar on the runtime system classpath so ServiceLoader
    //   can find its META-INF/services/org.robolectric.shadows.ShadowAdapter.
    compile project(":robolectric-shadows/shadows-core")

    // Compile dependencies
    compile "org.ow2.asm:asm:5.0.1"
    compile "org.ow2.asm:asm-util:5.0.1"
    compile "org.ow2.asm:asm-commons:5.0.1"
    compile "org.ow2.asm:asm-analysis:5.0.1"

    compile "org.bouncycastle:bcprov-jdk16:1.46"
    compile "com.ximpleware:vtd-xml:2.11"
    compile "com.thoughtworks.xstream:xstream:1.4.8"
    compileOnly "com.intellij:annotations:12.0"

    compile "org.apache.ant:ant:1.8.0"
    compile("org.apache.maven:maven-ant-tasks:2.1.3") {
        exclude group: "junit", module: "junit"
    }
    compileOnly AndroidSdk.MAX_SDK.coordinates
    compileOnly "junit:junit:4.12"

    // Testing dependencies
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-junit:2.0.0.0"
    testCompile "org.assertj:assertj-core:2.6.0"
    testCompile "org.mockito:mockito-core:2.5.4"
    testCompileOnly AndroidSdk.MAX_SDK.coordinates // compile against latest Android SDK
    testRuntime AndroidSdk.MAX_SDK_FOR_THIS_JDK.coordinates // run against whatever this JDK supports
}

checkApiChanges {
    entryPoints += "org.robolectric.RobolectricTestRunner"
}